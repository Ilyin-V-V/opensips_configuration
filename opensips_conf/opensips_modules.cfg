# id -> opensips
#========================================================================================================================================#
#======================== Скрипт конфигурации OPENSIPS ==================================================================================#
#======================== Для генерирования предопределеных файлов opensis.cfg использовать make menuconfig =============================#
#======================== Документация по переменным, функциям и параметрам: ============================================================#
#======================== http://www.opensips.org/Resources/DocsCookbooks ===============================================================#
#========================================================================================================================================#


#======================== Настройки модулей =================================#
#
#========================> Задействуем модули <==============================#
#========================> учитывая зависимости <============================#

#!define WITH_UDP_TRANSPORT /* UDP протокол */
#!define WITH_TCP_TRANSPORT /* TCP протокол */
#!define WITH_MANAGMENT /* Менеджмент интерфейс */
#!define SIPMSG /* Обработка протокола SIP */
#!define WITH_SIGNALING /* Необходим модулям sl, tm Функция send_reply(code, reason) */
#!define WITH_STATELESS /* Обработка транзакций SIP без сохранения состояния sl_send_reply(code, reason), sl_reply_error() */
#!define WITH_TRANSACTION /* Обработка транзакций SIP с учетом состояния */
#!define WITH_RROUTE /* Обработка Record-Route */
#!define WITH_MAXFWD /* Обработка MaX-Forward */
#!define WITH_URI /* Обработка URI SIP */
#!define WITH_REGISTER /* Обработка REGISTER */
#!define WITH_USRLOC /* Определение местоположения USER */
#!define WITH_AUTH /* Выполнение аутентификации */
#!define WITH_ACC /* Считаем кол-во успешных транзакций */
#!define WITH_PGSQL /* БД postgresSQL */
#!define WITH_AVP /* Работа с переменными AVP */
#!define WITH_CACHEDB / * Хеш-таблица */
#!define WITH_RANDOM / * RANDOM */
#!define WITH_DIALOG /* Диалоги, подсчет, использование */
#!define WITH_DIALPLAN /* Реализация правил соответствия и замены - PCRE */
#!define WITH_EXEC /* Выполнение bash команд */
#!define WITH_GFLAGS /* Использование флагов в сценариях */
/* #!define WITH_PERL */ /* Сценарии perl */
#!define WITH_LUA /* Сценарии lua */
#!define WITH_REGEX /* Регулярные выражения */
#!define WITH_TEXTOPS /* Работа с SIP как с текстом (функции) */
#!define WITH_UACAUTH /* Зависимость для B2BE */
#!define WITH_NATHELPER /* Работа с клиетами за NAT */
#!define WITH_LOAD_BALANCER /* Балансировка нагрузки без учета состояния вызова */
#!define WITH_LOAD_PERMISSIONS /* Авторизация по IP адресу */
/* #!define WITH_LOAD_GROUP */ /* Объединение пользователей в группы */
#!define WITH_DROUTING /* Маршрутизация на основе веса и стоимости */
#!define WITH_UAC_REGISTRANT /* Регистрация в качестве клиента */
#!define WITH_UAC /* Аутентификация клиента */
/* #!define WITH_PIKE */ /* Блокирует IP запроса на определенное время */
#!define WITH_FRAUD_DETECTION /* Основывается на правилах в б.д количество вызовов в минуту по префиксу, ведет статистику */
#!define WITH_HTTP /* HTTP сервер */
#!define WITH_MI_JSON /* MI JSON сервер */
#!define WITH_DISPATCHER /* Балансировка нагрузки без учета состояния вызова */
#!define WITH_RTPENGINE /* RTPENGINE медиа релей*/
#!define WITH_TOPOLOGY_HIDING /* RTPENGINE медиа релей*/

#===========================================================================>
#Путь директории с модулями
mpath="/usr/local/lib64/opensips/modules/"
#<===========================================================================

#========================> Настроим модули <=================================
#
#!ifdef WITH_UDP_TRANSPORT
 loadmodule "proto_udp.so"
#!endif

#!ifdef WITH_TCP_TRANSPORT
# loadmodule "proto_tcp.so"
#!endif

#!ifdef WITH_MANAGMENT
 loadmodule "mi_fifo.so"
 modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo")
 modparam("mi_fifo", "fifo_mode", 0666)
 modparam("mi_fifo", "fifo_user", 0)
 modparam("mi_fifo", "fifo_group", 0)
 modparam("mi_fifo", "fifo_user", "opensips")
 modparam("mi_fifo", "fifo_group", "opensips")
#!endif

#!ifdef SIPMSG
 loadmodule "sipmsgops.so"
#!endif

#!ifdef WITH_SIGNALING
 loadmodule "signaling.so"
#!endif

#!ifdef WITH_STATELESS
 loadmodule "sl.so"
 modparam ("sl", "enable_stats", 1)
#!endif

#!ifdef WITH_TRANSACTION
 loadmodule "tm.so"
 modparam("tm", "fr_timeout", 5)
 modparam("tm", "fr_inv_timeout", 25)
 modparam("tm", "wt_timer", 5)
 modparam("tm", "delete_timer", 2)
 modparam("tm", "T1_timer", 700)
 modparam("tm", "T2_timer", 8000)
 modparam("tm", "restart_fr_on_each_reply", 1)
 modparam("tm", "onreply_avp_mode", 1)
 modparam("tm", "disable_6xx_block", 0)
 modparam("tm", "enable_stats", 1)
 modparam("tm", "timer_partitions", 8)
 modparam("tm", "auto_100trying", 1)
 modparam("tm", "pass_provisional_replies", 0)
#!endif

#!ifdef WITH_RROUTE
 loadmodule "rr.so"
 modparam("rr", "append_fromtag", 1)
 modparam("rr", "enable_double_rr", 1)
 modparam("rr", "add_username", 0)
 modparam("rr", "enable_socket_mismatch_warning", 0)
#!endif

#!ifdef WITH_MAXFWD
 loadmodule "maxfwd.so"
 modparam("maxfwd", "max_limit", 10)
#!endif

#!ifdef WITH_URI
 loadmodule "uri.so"
 modparam("uri", "db_table", "subscriber")
 modparam("uri", "user_column", "username")
 modparam("uri", "domain_column", "domain")
 modparam("uri", "uriuser_column", "username")
 modparam("uri", "use_uri_table", 0)
 modparam("uri", "use_domain", 1)
#!endif

#!ifdef WITH_REGISTER
 loadmodule "registrar.so"
 modparam("registrar", "default_expires", 3600)
 modparam("registrar", "min_expires", 30)
 modparam("registrar", "received_avp", "$avp(received)")
#!endif

#!ifdef WITH_USRLOC
 loadmodule "usrloc.so"
 modparam("usrloc", "use_domain", 0)
 modparam("usrloc", "nat_bflag", "NAT_FLAG")
 modparam("usrloc", "timer_interval", 30)
 #modparam("usrloc", "working_mode_preset", "single-instance-no-db")
 #modparam("usrloc", "working_mode_preset", "single-instance-sql-write-through")
 modparam("usrloc", "working_mode_preset", "single-instance-sql-write-back")
 #modparam("usrloc", "working_mode_preset", "sql-only")
 #modparam("usrloc", "db_mode", 3)
 modparam ("usrloc", "cluster_mode", "none")
 modparam("usrloc", "db_url", "postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam ("usrloc", "restart_persistency", "load-from-sql")
 modparam ("usrloc", "sql_write_mode", "write-back")
 modparam("usrloc", "matching_mode", 0)
#!endif

#!ifdef WITH_AUTH
 loadmodule "auth.so"
#modparam("auth", "secret", "RjD671sHzNMDhtLY01nbS6") /* Кластер nonce */
 modparam("auth", "disable_nonce_check", 0)
 modparam("auth", "nonce_expire", 15)
 modparam("auth", "calculate_ha1", 0)
 loadmodule "auth_db.so"
 modparam("auth_db", "user_column", "username")
 modparam("auth_db", "domain_column", "domain")
 modparam("auth_db", "password_column", "ha1")
 modparam("auth", "calculate_ha1", 0)
 modparam("auth_db", "password_column_2", "ha1b")
 modparam("auth_db", "use_domain", 1)
#!endif

#!ifdef WITH_ACC
 loadmodule "acc.so"
 modparam("acc", "early_media", 0)
 modparam("acc", "report_cancels", 1)
 modparam("acc", "detect_direction", 0)
 modparam("acc", "db_url", "postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("acc", "db_table_acc", "acc")
#!endif

#!ifdef WITH_PGSQL
 loadmodule "db_postgres.so"
 modparam("db_postgres", "exec_query_threshold", 60000)
#!endif

#!ifdef WITH_AVP
 loadmodule "avpops.so"
 modparam("avpops", "db_url", "postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("avpops","db_url","1 postgres://userbase:passwordbase@hostbase/asterisk")
 modparam("avpops", "avp_table", "usr_preferences")
#!endif

#!ifdef WITH_CACHEDB
 loadmodule "cachedb_local.so"
#!endif

#!ifdef WITH_RANDOM
 loadmodule "cfgutils.so"
 modparam("cfgutils", "initial_probability", 10)
#!endif

#!ifdef WITH_DIALOG
 loadmodule "dialog.so"
 modparam("dialog", "enable_stats", 1)
 modparam("dialog", "db_mode", 3)
 modparam("dialog", "options_ping_interval", 30)
 modparam("dialog", "reinvite_ping_interval", 300)
#!endif

#!ifdef WITH_DIALPLAN
 loadmodule "dialplan.so"
 modparam("dialplan", "partition", "default:table_name=dialplan; db_url=postgres://userbase:passwordbase@hostbase/sbcbase;")
#!endif

#!ifdef WITH_UAC_REGISTRANT
 loadmodule "uac_registrant.so"
 modparam("uac_registrant", "hash_size", 2)
 modparam("uac_registrant", "timer_interval", 60)
 modparam("uac_registrant", "db_url", "postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("uac_registrant", "table_name", "registrant")
#!endif

#!ifdef WITH_UACAUTH
 loadmodule "uac_auth.so"
 modparam ("uac_auth", "credential", "username: domain: password")
 modparam("uac_auth","auth_realm_avp","$avp(realm)")
 modparam("uac_auth","auth_username_avp","$avp(user)")
 modparam("uac_auth","auth_password_avp","$avp(pass)")
#!endif

#!define WITH_UAC
 loadmodule "uac.so"
#!endif

#!ifdef WITH_EXEC
 loadmodule "exec.so"
 #modparam("exec","setvars",1)
 modparam("exec","time_to_kill", 2)
#!endif

#!ifdef WITH_GFLAGS
 loadmodule "gflags.so"
#!endif

#!ifdef WITH_PERL
# loadmodule "perl.so"
#!endif

#!ifdef WITH_LUA
 loadmodule "lua.so"
 modparam("lua", "luafilename", "/usr/local/etc/opensips/extensions/core/core.lua")
#!endif

#!ifdef WITH_REGEX
 loadmodule "regex.so"
#!endif

#!ifdef WITH_TEXTOPS
 loadmodule "textops.so"
#!endif

#!ifdef WITH_NATHELPER
 loadmodule "nathelper.so"
 modparam("nathelper", "natping_interval", 30)
 #modparam("nathelper", "ping_nated_only", 0)
 modparam("nathelper", "natping_partitions", 1)
 modparam("nathelper", "natping_socket", "wan_ip:5060")
 modparam("nathelper", "received_avp", "$avp(received)")
 modparam("nathelper", "sipping_bflag", "SIP_PING_FLAG")
 #modparam("nathelper", "force_socket", "wan_iface:5060")
 #modparam("nathelper", "remove_on_timeout_bflag", "RM_ONTO_FLAG")
 modparam("nathelper", "sipping_from", "sip:pinger@host.domain")
 modparam("nathelper", "sipping_method", "OPTIONS")
 modparam("nathelper", "max_pings_lost", 5)
 modparam("nathelper", "natping_tcp", 0)
#!endif

#!define WITH_LOAD_BALANCER
 loadmodule "load_balancer.so"
 modparam("load_balancer", "db_url","postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("load_balancer", "db_table", "load_balancer")
 modparam("load_balancer", "probing_interval", 10)
 modparam("load_balancer", "probing_method", "OPTIONS")
 modparam("load_balancer", "probing_from", "sip:rtploc@localhost")
 modparam("load_balancer", "probing_reply_codes", "501, 403")
#!endif

#!define WITH_LOAD_PERMISSIONS
 loadmodule "permissions.so"
 modparam("permissions", "db_url","postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("permissions", "address_table", "address")
#!endif"

#!define WITH_LOAD_GROUP
# loadmodule "group.so"
# modparam("group", "db_url","postgres://userbase:passwordbase@hostbase/sbcbase")
# modparam("group", "table", "grp")
# modparam("group", "use_domain", 1)
# modparam("group", "re_table", "re_grp")
#!endif"

#!define WITH_DROUTING
 loadmodule "drouting.so"
 modparam("drouting", "db_url","postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("drouting", "ruri_avp", '$avp(dr_ruri)')
 modparam("drouting", "gw_id_avp", '$avp(gw_id)')
 modparam("drouting", "rule_id_avp", '$avp(rule_id)')
 modparam("drouting", "rule_prefix_avp", '$avp(dr_prefix)')
 modparam("drouting", "carrier_id_avp", '$avp(carrier_id)')
 modparam("drouting", "default_group", 4)
 modparam("drouting", "force_dns", 1)
 modparam("drouting", "persistent_state", 1)
 modparam("drouting", "no_concurrent_reload", 1)
 modparam("drouting", "probing_interval", 30)
 modparam("drouting", "probing_method", "OPTIONS")
 modparam("drouting", "probing_from", "sip: pinger@host.domain")
 modparam("drouting", "probing_reply_codes", "501, 403")
 modparam("drouting", "use_domain", 1)
 modparam("drouting", "use_partitions", 0)
#!endif"

#!define WITH_PIKE
# loadmodule "pike.so"
# modparam("pike", "sampling_time_unit", 5)
# modparam("pike", "reqs_density_per_unit", 15)
# modparam("pike", "remove_latency", 180)
# modparam("pike", "check_route", "pike")
# modparam("pike", "pike_log_level", 1)
#!endif"

#!define WITH_FRAUD_DETECTION
 loadmodule "fraud_detection.so"
 modparam("fraud_detection", "db_url","postgres://userbase:passwordbase@hostbase/sbcbase")
#!endif"

#!define WITH_HTTP
 loadmodule "httpd.so"
 modparam("httpd", "ip", "wan_ip")
 modparam("httpd", "port", 8008)
 modparam("httpd", "buf_size", 1000000)
 modparam("httpd", "post_buf_size", 1000000)
#!endif"

#!define WITH_MI_JSON
 loadmodule "mi_json.so"
 modparam("mi_json", "mi_json_root", "json")
#!endif"

#!ifdef WITH_DISPATCHER
 loadmodule "dispatcher.so"
 modparam("dispatcher", "db_url","postgres://userbase:passwordbase@hostbase/sbcbase")
 modparam("dispatcher", "setid_pvar", "$var(setid)")
 modparam("dispatcher", "ds_ping_method", "OPTIONS")
 modparam("dispatcher", "ds_ping_from", "sip:dispather@host.domain")
 modparam("dispatcher", "ds_ping_interval", 3)
 modparam("dispatcher", "ds_probing_threshhold", 2)
 modparam("dispatcher", "ds_probing_mode", 1)
 modparam("dispatcher", "options_reply_codes", "200, 501, 401, 403, 404")
 modparam("dispatcher", "pvar_algo_pattern", "$stat(load_%u)")
 modparam("dispatcher", "table_name", "dispatchernode")
#!endif

#!define WITH_RTPPROXY
 loadmodule "rtpengine.so"
 modparam("rtpengine", "rtpengine_sock", "udp:media_ip1:2223 udp:media_ip2:2223")
 modparam("rtpengine", "rtpengine_disable_tout", 60)
 modparam("rtpengine", "rtpengine_tout", 5)
 modparam("rtpengine", "rtpengine_retr", 2)
 modparam("rtpengine", "extra_id_pv", "$avp(extra_id)")
 modparam("rtpengine", "setid_avp", "$avp(setid)")
#!endif

#!define WITH_TOPOLOGY_HIDING
 loadmodule "topology_hiding.so"
 modparam ("topology_hiding", "force_dialog", 0)
 modparam ("topology_hiding", "th_contact_encode_passwd", "GwTw91hhBcR")
 modparam ("topology_hiding", "th_contact_encode_param", "info")
#!endif

#========================> Дальше <==================================
# Файл с настройками модулей
include_file "/usr/local/etc/opensips/extensions/core/core.cfg"
#<===================================================================

